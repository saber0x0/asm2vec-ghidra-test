import numpy as np

import asm2vec.asm
import asm2vec.parse
import asm2vec.model


def cosine_similarity(v1, v2):
    return np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2))


def main():
    training_funcs = asm2vec.parse.parse('test.s', func_names=['FUN_140001080', 'FUN_140001090', 'FUN_1400010e0', 'FUN_1400012b0', 'FUN_140001310', '_guard_check_icall', 'FUN_140001360', 'FUN_140001370', 'FUN_140001380', 'FUN_140001390', 'FUN_1400013a0', 'FUN_1400013b0', 'FUN_1400013c0', 'FUN_1400013d0', 'FUN_1400013e0', 'FUN_140001440', 'FUN_140001490', 'FUN_1400014f0', 'FUN_140001530', 'FUN_140001550', 'FUN_1400015a0', 'FUN_1400015f0', 'FUN_140001610', 'FUN_140001650', 'FUN_140001690', 'FUN_1400016d0', 'FUN_140001750', 'FUN_140001760', 'FUN_1400017f0', 'FUN_140001840', 'FUN_140001850', 'FUN_140001b70', 'FUN_140002200', 'FUN_140002260', 'FUN_140002390', 'FUN_140002520', 'FUN_1400025a0', 'FUN_140002600', 'FUN_140002800', 'FUN_1400028e0', 'FUN_140002940', 'FUN_140002a70', 'FUN_140002ab0', 'FUN_140002b50', 'FUN_140002db0', 'FUN_140002dc0', 'FUN_140002ef4', 'FUN_140002f00', 'FUN_140002f10', 'FUN_140002f20', 'FUN_140002f30', 'FUN_140002f50', 'InitializeCriticalSectionEx', 'operator_delete', 'GetThisMessageMap', 'DoModal', 'GetRuntimeClass', 'GetRuntimeClass', 'GetRuntimeClass', 'OnCmdMsg', 'OnFinalRelease', 'IsInvokeAllowed', 'GetDispatchIID', 'GetTypeInfoCount', 'GetTypeLibCache', 'GetTypeLib', 'GetCommandMap', 'GetDispatchMap', 'GetConnectionMap', 'GetInterfaceMap', 'GetEventSinkMap', 'OnCreateAggregates', 'GetInterfaceHook', 'GetExtraConnectionPoints', 'GetConnectionHook', 'Run', 'PreTranslateMessage', 'PumpMessage', 'OnIdle', 'IsIdleMessage', 'ExitInstance', 'ProcessWndProcException', 'ProcessMessageFilter', 'GetMainWnd', 'Delete', 'GetProfileIntW', 'WriteProfileInt', 'GetProfileStringW', 'WriteProfileStringW', 'GetProfileBinary', 'WriteProfileBinary', 'InitLibId', 'Register', 'Unregister', 'OpenDocumentFile', 'OpenDocumentFile', 'AddToRecentFileList', 'InitApplication', 'SaveAllModified', 'DoMessageBox', 'DoWaitCursor', 'OnDDECommand', 'WinHelpW', 'HtmlHelpW', 'WinHelpInternal', 'RegisterWithRestartManager', 'RegisterWithRestartManager', 'ApplicationRecoveryCallback', 'GetDataRecoveryHandler', 'IsTaskbarInteractionEnabled', 'RestartInstance', 'LoadAppLangResourceDLL', 'LoadSysPolicies', 'GetThisMessageMap', 'AfxGetModuleState', 'OnInitDialog', 'OnOK', 'GetRuntimeClass', 'OnCmdMsg', 'OnFinalRelease', 'GetInterfaceMap', 'PreSubclassWindow', 'Create', 'CreateEx', 'CreateEx', 'DestroyWindow', 'PreCreateWindow', 'CalcWindowRect', 'GetMenu', 'SetMenu', 'OnToolHitTest', 'GetScrollBarCtrl', 'WinHelpW', 'HtmlHelpW', 'WinHelpInternal', 'ContinueModal', 'EndModalLoop', 'OnDrawIconicThumbnailOrLivePreview', 'EnsureStdObj', 'get_accParent', 'get_accChildCount', 'get_accChild', 'get_accName', 'get_accValue', 'get_accDescription', 'get_accRole', 'get_accState', 'get_accHelp', 'get_accHelpTopic', 'get_accKeyboardShortcut', 'get_accFocus', 'get_accSelection', 'get_accDefaultAction', 'accSelect', 'accLocation', 'accNavigate', 'accHitTest', 'accDoDefaultAction', 'put_accName', 'put_accValue', 'SetProxy', 'CreateAccessibleProxy', 'OnCommand', 'OnNotify', 'GetSuperWndProcAddr', 'PreTranslateMessage', 'OnAmbientProperty', 'WindowProc', 'OnWndMsg', 'DefWindowProcW', 'PostNcDestroy', 'OnChildNotify', 'OnTouchInputs', 'OnTouchInput', 'GetGestureStatus', 'OnGestureZoom', 'OnGesturePan', 'OnGestureRotate', 'OnGestureTwoFingerTap', 'OnGesturePressAndTap', 'ResizeDynamicLayout', 'CheckAutoCenter', 'IsFrameWnd', 'CreateControlContainer', 'CreateControlSite', 'SetOccDialogInfo', 'GetOccDialogInfo', 'Create', 'CreateIndirect', 'CreateIndirect', 'OnSetFont', 'OnCancel', 'PreInitDialog', 'FUN_1400032cc', 'FUN_140003384', 'FUN_1400033b0', 'entry', 'FUN_140003550', '__scrt_acquire_startup_lock', 'FUN_1400035ac', '__scrt_initialize_onexit_tables', 'FUN_140003674', '__scrt_release_startup_lock', '__scrt_uninitialize_crt', '_onexit', 'atexit', 'FUN_1400037b0', 'operator_delete', '__security_init_cookie', 'FUN_140003890', 'FUN_140003898', 'FUN_1400038a0', 'FUN_1400038b0', 'FUN_1400038b4', 'FUN_1400038bc', 'FUN_1400038c4', 'FUN_1400038e0', 'FUN_1400038ec', 'FUN_1400038f4', 'FUN_1400038fc', 'FUN_140003904', '__scrt_get_show_window_mode', 'thunk_FUN_140001370', 'FUN_140003a90', 'FUN_140003ae4', 'FUN_140003b50', '__raise_securityfailure', 'FUN_140003bfc', 'capture_previous_context', 'FUN_140003d44', '__scrt_is_ucrt_dll_in_use', '__GSHandlerCheckCommon', 'CAtlBaseModule', '~CAtlBaseModule', '_Lock', '_Unlock', 'showmanyc', 'uflow', 'xsgetn', 'xsputn', 'setbuf', 'sync', 'imbue', '__CxxFrameHandler4', 'memset', '__current_exception', '__current_exception_context', 'memmove', 'free', '_seh_filter_exe', '_set_app_type', '__setusermatherr', '_configure_wide_argv', '_initialize_wide_environment', '_get_wide_winmain_command_line', '_initterm', '_initterm_e', 'exit', '_exit', '_set_fmode', '_cexit', '_register_thread_local_exe_atexit_callback', '_configthreadlocale', '__p__commode', '_initialize_onexit_table', '_register_onexit_function', '_crt_atexit', 'terminate', 'AfxInitialize', 'AfxWinMain', 'AfxWinMain', '_CxxThrowException', 'memcmp', 'memcpy', '_guard_dispatch_icall'])
    estimating_funcs = asm2vec.parse.parse('test2.s', func_names=['FUN_140001010', 'FUN_140001080', 'FUN_1400011e0', 'FUN_1400012b0', 'FUN_140001520', 'FUN_140001740', 'FUN_140003b40', 'FUN_140003b80', 'FUN_140003c80', 'FUN_140003d50', 'FUN_140004110', 'FUN_1400044e0', 'FUN_140004530', 'FUN_1400045b0', 'FUN_1400046f0', 'FUN_140004890', 'FUN_1400048a0', 'FUN_1400048e0', 'FUN_140004d50', 'FUN_140004de0', 'thunk_FUN_140013d40', 'thunk_FUN_140013d90', 'thunk_FUN_140013db0', 'thunk_FUN_1400225a0', 'FUN_140004ed0', 'FUN_140004f10', 'FUN_140005290', 'FUN_140005350', 'FUN_140005b30', 'FUN_140005c40', 'FUN_140005d00', 'FUN_140005d40', 'FUN_140005dd0', 'FUN_140005e60', 'FUN_140005ed0', 'FUN_140005f90', 'FUN_140006000', 'FUN_1400060b0', 'FUN_140006170', 'FUN_140006240', 'FUN_1400062a0', 'FUN_1400062e0', 'FUN_1400065d0', 'FUN_140006620', 'FUN_140006670', 'FUN_140006710', 'FUN_140006750', 'FUN_140006760', 'FUN_1400067c0', 'FUN_140006820', 'FUN_1400069a0', 'FUN_140007270', 'FUN_1400072e0', 'FUN_140008a30', 'FUN_140008e20', 'FUN_1400091d0', 'FUN_140009650', 'FUN_140009ac0', 'FUN_140009ee0', 'FUN_14000a390', 'FUN_14000a530', 'FUN_14000a560', 'FUN_14000a5b0', 'FUN_14000a610', 'FUN_14000a650', 'FUN_14000a6a0', 'FUN_14000a7c0', 'FUN_14000a850', 'FUN_14000a910', 'FUN_14000a9d0', 'FUN_14000aa80', 'FUN_14000ab40', 'FUN_14000ac00', 'FUN_14000acd0', 'FUN_14000adb0', 'FUN_14000ae30', 'FUN_14000aea0', 'FUN_14000b030', 'FUN_14000b260', 'FUN_14000b600', 'FUN_14000b6b0', 'FUN_14000b790', 'FUN_14000b850', 'FUN_14000b990', 'FUN_14000baa0', 'FUN_14000bc90', 'FUN_14000bde0', 'FUN_14000c060', 'FUN_14000c400', 'FUN_14000c430', 'FUN_14000cd30', 'FUN_14000cec0', 'FUN_14000cee0', 'FUN_14000cf00', 'FUN_14000cf30', 'FUN_14000cf50', 'FUN_14000cfe0', 'FUN_14000d150', 'FUN_14000d170', 'FUN_14000d190', 'FUN_14000d740', 'FUN_14000dc80', 'FUN_14000dcc0', 'FUN_14000e2e0', 'FUN_14000e300', 'FUN_14000e480', 'FUN_14000e6d0', 'FUN_14000e7c0', 'FUN_14000e9e0', 'FUN_14000eb50', 'FUN_14000ec40', 'FUN_14000f270', 'FUN_14000f310', 'FUN_14000f530', 'FUN_14000f710', 'FUN_14000f800', 'FUN_14000f950', 'FUN_14000ff40', 'FUN_140010070', 'FUN_140010430', 'FUN_140010780', 'FUN_140011300', 'FUN_140011510', 'FUN_140011650', 'FUN_1400117a0', 'FUN_1400118d0', 'FUN_140011ce0', 'FUN_140011e50', 'FUN_140011ef0', 'FUN_1400121b0', 'FUN_140012ac0', 'FUN_140012d20', 'FUN_140012d30', 'FUN_140013040', 'FUN_1400131b0', 'FUN_1400133b0', 'FUN_1400133f0', 'FUN_140013720', 'FUN_140013a20', 'FUN_140013d40', 'FUN_140013d90', 'FUN_140013db0', 'FUN_140013e50', 'FUN_140013f50', 'FUN_140014050', 'FUN_140014530', 'FUN_140014680', 'FUN_140014930', 'FUN_140014a30', 'FUN_140014d80', 'FUN_140014e10', 'FUN_1400155a0', 'FUN_140015670', 'FUN_140015770', 'FUN_140015810', 'FUN_140015860', 'FUN_140015d30', 'FUN_140015e30', 'FUN_140015fd0', 'FUN_140015fe0', 'FUN_140016100', 'FUN_140016380', 'FUN_140016490', 'FUN_1400164e0', 'FUN_140016520', 'FUN_140016730', 'FUN_140016890', 'FUN_140016960', 'FUN_140016f40', 'FUN_140017010', 'FUN_1400171e0', 'FUN_140017b60', 'FUN_140017cb0', 'FUN_140017f40', 'FUN_140018150', 'FUN_1400182a0', 'FUN_1400186c0', 'FUN_140018880', 'FUN_140018b20', 'FUN_140018da0', 'FUN_140018dc0', 'FUN_140019280', 'FUN_14001a440', 'FUN_14001a6c0', 'FUN_14001a7c0', 'FUN_14001a860', 'FUN_14001a970', 'FUN_14001f240', 'FUN_14001f310', 'FUN_14001f9f0', 'FUN_14001fa90', 'FUN_14001fae0', 'FUN_14001fcc0', 'FUN_140020180', 'FUN_140020260', 'FUN_1400205d0', 'FUN_140020b10', 'FUN_140020ba0', 'FUN_140020d20', 'tls_callback_0', 'FUN_140020e90', 'FUN_140021050', 'FUN_140021230', 'FUN_140021760', 'FUN_140021c90', 'FUN_140021d00', 'FUN_140021dd0', 'FUN_140021e40', 'FUN_140021eb0', 'FUN_140021f20', 'FUN_140022130', 'FUN_140022360', 'FUN_140022570', 'FUN_1400225a0', 'FUN_1400226b0', 'FUN_140022a50', 'FUN_140022e70', 'FUN_1400235d0', 'FUN_140023650', 'FUN_1400236d0', 'FUN_140023730', 'FUN_140023770', 'FUN_140023cd0', 'FUN_140023d40', 'FUN_140023e50', 'FUN_140023fa0', 'FUN_140023ff0', 'FUN_1400243f0', 'FUN_140024410', 'FUN_140024610', 'FUN_140025240', 'FUN_140025890', 'FUN_140025a40', 'FUN_140025ae0', 'FUN_140025ba0', 'FUN_140025c70', 'FUN_140025cd0', 'FUN_140025ee0', 'FUN_140025f40', 'FUN_1400260e0', 'FUN_140026270', 'FUN_140026410', 'FUN_140026530', 'FUN_140026620', 'FUN_140026920', 'FUN_140026b50', 'FUN_140026be0', 'FUN_140026c70', 'FUN_140026f30', 'FUN_140026fc0', 'FUN_140027050', 'FUN_140027760', 'FUN_140027890', 'FUN_140027db0', 'FUN_1400282d0', 'FUN_140028520', 'FUN_140028720', 'FUN_140028de0', 'FUN_140028fb0', 'FUN_140029260', 'FUN_140029f40', 'FUN_140029fc0', 'FUN_14002a240', 'FUN_14002a2f0', 'FUN_14002a380', 'FUN_14002a3c0', 'FUN_14002a3d0', 'FUN_14002a560', 'FUN_14002a770', 'FUN_14002a920', 'FUN_14002aaa0', 'FUN_14002ac20', 'FUN_14002ac30', 'FUN_14002acd0', 'FUN_14002af60', 'FUN_14002b0e0', 'FUN_14002b1d0', 'FUN_14002b1f0', 'FUN_14002b200', 'FUN_14002b440', 'FUN_14002b6f0', 'FUN_14002b8b0', 'FUN_14002b920', 'FUN_14002ba70', 'FUN_14002baf0', 'FUN_14002bc20', 'FUN_14002bc70', 'FUN_14002be80', 'FUN_14002c1c0', 'FUN_14002c220', 'FUN_14002c540', 'FUN_14002c560', 'FUN_14002c580', 'FUN_14002c5c0', 'FUN_14002c680', 'FUN_14002c780', 'FUN_14002c7d0', 'FUN_14002c8a0', 'FUN_14002c990', 'FUN_14002c9d0', 'FUN_14002cd60', 'FUN_14002cea0', 'FUN_14002d080', 'FUN_14002d170', 'FUN_14002d2a0', 'FUN_14002d4a0', 'FUN_14002dba0', 'FUN_14002e0e0', 'FUN_14002e5a0', 'FUN_14002e6d0', 'thunk_FUN_14002acd0', 'FUN_14002e810', 'FUN_14002ec00', 'FUN_14002ef70', 'FUN_14002f270', 'FUN_14002f3d0', 'FUN_14002f410', 'FUN_14002f540', 'FUN_14002f5f8', '__scrt_common_main_seh', 'entry', '__chkstk', 'FUN_14002f820', '__scrt_acquire_startup_lock', 'FUN_14002f888', '__scrt_initialize_onexit_tables', 'FUN_14002f950', '__scrt_release_startup_lock', '__scrt_uninitialize_crt', '_onexit', 'atexit', '__security_init_cookie', 'FUN_14002fb38', 'FUN_14002fb3c', 'FUN_14002fb44', 'FUN_14002fb4c', '_guard_check_icall', 'FUN_14002fb60', 'FUN_14002fb68', 'FUN_14002fb70', 'FUN_14002fb8c', 'FUN_14002fb98', 'FUN_14002fba0', 'FUN_14002fba8', 'FUN_14002fbb0', 'thunk_FUN_14002fb38', 'FUN_14002fd00', 'FUN_14002fd54', 'FUN_14002fdc0', 'free', 'FUN_14002fe40', '__scrt_is_ucrt_dll_in_use', 'free', '_CallSETranslator<>', 'FUN_14003005c', 'FUN_1400300c0', 'FrameUnwindToEmptyState', 'FUN_140030150', 'FUN_140030220', 'UnwindNestedFrames', '_CreateFrameInfo', 'FUN_140030494', '_GetImageBase', '_GetThrowImageBase', '_SetImageBase', 'FUN_140030528', 'FUN_1400305d0', '__vcrt_initialize', '__vcrt_uninitialize', '__std_type_info_compare', '__DestructExceptionObject', 'FUN_14003096c', '_IsExceptionObjectToBeDestroyed', '__AdjustPointer', '__FrameUnwindFilter', 'FUN_140030a2c', 'FUN_140030a40', 'FUN_140030a74', '__vcrt_getptd_noexit', '__vcrt_initialize_ptd', '__vcrt_uninitialize_ptd', 'GetCurrentState', 'GetUnwindTryBlock', 'SetState', 'SetUnwindTryBlock', 'FUN_140030c58', 'FUN_140030c60', 'BuildCatchObjectHelperInternal<class___FrameHandler3>', 'BuildCatchObjectInternal<class___FrameHandler3>', 'CatchIt<class___FrameHandler3>', 'FUN_14003105c', 'FUN_14003152c', 'TypeMatchHelper<class___FrameHandler3>', 'FUN_1400318dc', 'thunk_FUN_1400318dc', 'FUN_140031b1c', 'FUN_140031b58', 'exception', 'FUN_140031df0', 'FrameUnwindToState', 'GetHandlerSearchState', 'FUN_140032098', 'Is_bad_exception_allowed', 'FUN_140032210', '_CallMemberFunction2', 'FUN_140032270', 'FUN_1400322a0', '__except_validate_context_record', '__vcrt_initialize_locks', '__vcrt_uninitialize_locks', 'FUN_14003235c', '__vcrt_FlsAlloc', '__vcrt_FlsFree', '__vcrt_FlsGetValue', '__vcrt_FlsSetValue', '__vcrt_InitializeCriticalSectionEx', '_CallSettingFrame', '__std_exception_copy', '__std_exception_destroy', '_seh_filter_exe', '_set_app_type', '__setusermatherr', '_configure_narrow_argv', '_initialize_narrow_environment', '_get_initial_narrow_environment', '_initterm', '_initterm_e', 'exit', '_exit', '_set_fmode', '__p___argc', '__p___argv', '_cexit', '_register_thread_local_exe_atexit_callback', '_configthreadlocale', '_set_new_mode', '__p__commode', '_initialize_onexit_table', '_register_onexit_function', '_crt_atexit', 'terminate', 'free', 'abort', 'malloc', 'strcpy_s', 'calloc', 'wcsncmp', '__GSHandlerCheckCommon', 'FUN_1400338a0', '_FindPESection', '_IsNonwritableInCurrentImage', 'FUN_140033960', '__raise_securityfailure', 'FUN_1400339c0', 'capture_previous_context', '_guard_dispatch_icall', 'FUN_140033b80', 'memcmp', 'FUN_140034300', 'FUN_140034690', 'FUN_140034760', 'FUN_140034810', 'FUN_140034940', 'FUN_140034980', 'FUN_140034a40', 'FUN_140034af0', 'FUN_140034bb0', 'FUN_140034bf0', 'FUN_140034ca0', 'FUN_140034d10', 'FUN_140034d80', 'FUN_140034da0', 'FUN_140034df0', 'FUN_1400351e0', 'FUN_140035290', 'FUN_1400352b0', 'FUN_140035310', 'FUN_140035330', 'FUN_1400353a0', 'FUN_1400353e0', 'FUN_140035470', 'FUN_1400354c0', 'FUN_140035510', 'FUN_140035590', 'FUN_1400355b0', 'FUN_1400357a0', 'FUN_140035840', 'FUN_1400358c0', 'FUN_140035940', 'FUN_1400359c0', 'FUN_140035a00', 'FUN_140035a20', 'FUN_140035b8f', 'FUN_140035c3a', 'FUN_140035c50', 'FUN_140035c80'])

    model = asm2vec.model.Asm2Vec(d=200)
    training_repo = model.make_function_repo(training_funcs)
    model.train(training_repo)
    estimating_funcs_vec = list(map(lambda f: model.to_vec(f), estimating_funcs))
    for tf in training_repo.funcs():
        for (ef, efv) in zip(estimating_funcs, estimating_funcs_vec):
            sim = cosine_similarity(tf.v, efv)
            print('sim("{}", "{}") = {}'.format(tf.sequential().name(), ef.name(), sim))

if __name__ == '__main__':
    main()
